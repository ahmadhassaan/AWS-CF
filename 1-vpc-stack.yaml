Parameters:
  MyAZ1:
    Description: First AvailabilityZone
    Type: AWS::EC2::AvailabilityZone::Name
  MyAZ2:
   Description: Second AvailabilityZone
   Type: AWS::EC2::AvailabilityZone::Name
  VPCCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.0.0/16
    Description: VPC CIDR Block  (eg 10.0.0.0/16)
    Type: String
  PublicSubnetCIDR1:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.0.0/24
    Description: First Public Subnet CIDR (eg 10.0.0.0/24)
    Type: String
  PublicSubnetCIDR2:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.1.0/24
    Description: Second Public Subnet CIDR (eg 10.0.1.0/24)
    Type: String
  PrivateSubnetCIDR1:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.2.0/24
    Description: First Private Subnet CIDR (eg 10.0.2.0/24)
    Type: String
  PrivateSubnetCIDR2:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.3.0/24
    Description: Second Private Subnet CIDR (eg 10.0.3.0/24)
    Type: String


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
  IGW:
    Type: AWS::EC2::InternetGateway
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref  IGW
      VpcId:    !Ref  VPC
 ######### STart of   declaration of Four Subnets : 2 Public and 2 private  ###############
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnetCIDR1
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref VPC
      AvailabilityZone: !Ref MyAZ1
      Tags:
        - Key: Name
          Value: PublicSubnet1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnetCIDR2
      MapPublicIpOnLaunch: 'true'
      VpcId: !Ref VPC
      AvailabilityZone: !Ref MyAZ2
      Tags:
        - Key: Name
          Value: PublicSubnet2
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnetCIDR1
      VpcId: !Ref  VPC
      AvailabilityZone: !Ref MyAZ1
      Tags:
        - Key: Name
          Value: PrivateSubnet1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubnetCIDR2
      VpcId: !Ref  VPC
      AvailabilityZone: !Ref MyAZ2
      Tags:
        - Key: Name
          Value: PrivateSubnet2
  #########  END of declaration of Four Subnets : 2 Public and 2 private  ###############

  ### Start of RouteTable for First Public Subnet ################
  PublicSubnetRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicSubnetEgressRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId:   !Ref  PublicSubnetRouteTable1
  PublicSubnetEgressRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref  PublicSubnetRouteTable1
      SubnetId:   !Ref PublicSubnet1
 ### End of RouteTable for First Public Subnet ################

 ### Start of RouteTable for Second Public Subnet ################
  PublicSubnetRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicSubnetEgressRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId:   !Ref  PublicSubnetRouteTable2
  PublicSubnetEgressRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref  PublicSubnetRouteTable2
      SubnetId:   !Ref PublicSubnet2
  ### End of RouteTable for Second Public Subnet ################

  #### Start of  NAT gateway for First  private subnet  ############
  NAT1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:  !GetAtt EIP1.AllocationId
      SubnetId: !Ref PublicSubnet1

  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  RoutePrivate1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:  !Ref RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT1
  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PrivateSubnet1RouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref  RouteTablePrivate1
      SubnetId:   !Ref PrivateSubnet1
#### END of  NAT gateway for First  private subnet  ############

#### Start of  NAT gateway for Second  private subnet  ############
  NAT2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:  !GetAtt EIP2.AllocationId
      SubnetId: !Ref PublicSubnet2

  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  RoutePrivate2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:  !Ref RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT2
  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PrivateSubnet2RouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref  RouteTablePrivate2
      SubnetId:   !Ref PrivateSubnet2
  #### End of  NAT gateway for Second  private subnet  ############

## Exporting VPC, Two Public Subnet, Two Private Subnet
Outputs:
  VPC:
    Description: MyVPC
    Value: !Ref VPC
    Export:
      Name: VPC
  PublicSubnet1:
    Description: First Public Subnet
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1
  PublicSubnet2:
    Description: Second  Public Subnet
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet2
  PrivateSubnet1:
    Description: First Private  Subnet
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1
  PrivateSubnet2:
    Description: Second  Private  Subnet
    Value: !Ref PrivateSubnet2
    Export:
      Name: PrivateSubnet2
  PrivateSubnetCIDR1:
    Description: First Private  Subnet CIDR
    Value: !Ref PrivateSubnetCIDR1
    Export:
      Name: PrivateSubnetCIDR1
  PrivateSubnetCIDR2:
    Description: Second  Private  Subnet CIDR
    Value: !Ref PrivateSubnetCIDR2
    Export:
      Name: PrivateSubnetCIDR2
